package view;

import dao.TarefaDAO;
import dto.Tarefa;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Arthur Lopes
 */
public class TelaPrincipal extends javax.swing.JFrame {
    
    //Variáveis criadas para servir de ponto de validação para verificar condição
    int check = 0, clickDuplo = 0; 
    
    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal() { 
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        listarTarefas();
        limparColunaId(); 
        PainelFiltros.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaTarefas = new javax.swing.JTable();
        btnNovaTarefaPrincipal = new javax.swing.JButton();
        btnEditarTarefa = new javax.swing.JButton();
        btnDeletarTarefa = new javax.swing.JButton();
        btnFiltrarTarefa = new javax.swing.JButton();
        PainelMod = new javax.swing.JPanel();
        PainelMod2 = new javax.swing.JPanel();
        labelModifique = new javax.swing.JLabel();
        labelTituloMod = new javax.swing.JLabel();
        txtTituloMod = new javax.swing.JTextField();
        labelPrazoMod = new javax.swing.JLabel();
        txtDataMod = new javax.swing.JFormattedTextField();
        comboBoxStatusMod = new javax.swing.JComboBox<>();
        labelStatusMod = new javax.swing.JLabel();
        labelDescricaoMod = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaDescricaoMod = new javax.swing.JTextArea();
        btnOkMod = new javax.swing.JButton();
        btnCancelarMod = new javax.swing.JButton();
        labelCodMod = new javax.swing.JLabel();
        txtCodMod = new javax.swing.JTextField();
        labelNovaTarefa = new javax.swing.JLabel();
        btnAtualizar = new javax.swing.JButton();
        PainelFiltros = new javax.swing.JPanel();
        checkBoxPendente = new javax.swing.JCheckBox();
        checkBoxExecutando = new javax.swing.JCheckBox();
        checkBoxConcluida = new javax.swing.JCheckBox();
        checkBoxTodos = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lista de Tarefas UnMEP");
        setBackground(new java.awt.Color(0, 153, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(60, 63, 65));
        setIconImages(null);

        jPanel1.setBackground(new java.awt.Color(0, 102, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 68)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("LISTA DE TAREFAS UnMEP");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/texto-da-lista 140x140.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Organize, Execute, Realize! Lista de Tarefas processo seletivo");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lista-de-controle (color).png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(9, 9, 9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        tabelaTarefas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabelaTarefas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "TÍTULO", "DESCRIÇÃO", "STATUS", "PRAZO"
            }
        ));
        tabelaTarefas.setToolTipText("");
        tabelaTarefas.setRowHeight(40);
        jScrollPane1.setViewportView(tabelaTarefas);

        btnNovaTarefaPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        btnNovaTarefaPrincipal.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnNovaTarefaPrincipal.setForeground(new java.awt.Color(0, 102, 153));
        btnNovaTarefaPrincipal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/adicionar.png"))); // NOI18N
        btnNovaTarefaPrincipal.setText("Nova Tarefa");
        btnNovaTarefaPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovaTarefaPrincipalActionPerformed(evt);
            }
        });

        btnEditarTarefa.setBackground(new java.awt.Color(255, 255, 255));
        btnEditarTarefa.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnEditarTarefa.setForeground(new java.awt.Color(0, 102, 153));
        btnEditarTarefa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editar-arquivo.png"))); // NOI18N
        btnEditarTarefa.setText("Editar Tarefa");
        btnEditarTarefa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarTarefaActionPerformed(evt);
            }
        });

        btnDeletarTarefa.setBackground(new java.awt.Color(255, 255, 255));
        btnDeletarTarefa.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnDeletarTarefa.setForeground(new java.awt.Color(0, 102, 153));
        btnDeletarTarefa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/botao-de-deletar.png"))); // NOI18N
        btnDeletarTarefa.setText("Deletar Tarefa");
        btnDeletarTarefa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarTarefaActionPerformed(evt);
            }
        });

        btnFiltrarTarefa.setBackground(new java.awt.Color(255, 255, 255));
        btnFiltrarTarefa.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnFiltrarTarefa.setForeground(new java.awt.Color(0, 102, 153));
        btnFiltrarTarefa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/filtro.png"))); // NOI18N
        btnFiltrarTarefa.setText("Filtrar Tarefa");
        btnFiltrarTarefa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarTarefaActionPerformed(evt);
            }
        });

        PainelMod.setBackground(new java.awt.Color(255, 255, 255));
        PainelMod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PainelMod.setForeground(new java.awt.Color(255, 255, 255));

        PainelMod2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelModifique.setBackground(new java.awt.Color(0, 0, 0));
        labelModifique.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelModifique.setForeground(new java.awt.Color(0, 0, 0));
        labelModifique.setText("Modifique o campo que deseja na tarefa e clique \"OK\"");

        labelTituloMod.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelTituloMod.setText("Título:");

        txtTituloMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTituloModActionPerformed(evt);
            }
        });

        labelPrazoMod.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelPrazoMod.setText("Prazo:");

        txtDataMod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        try {
            txtDataMod.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        comboBoxStatusMod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pendente", "Executando", "Concluída" }));

        labelStatusMod.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelStatusMod.setText("Status:");

        labelDescricaoMod.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelDescricaoMod.setText("Descrição:");

        txtAreaDescricaoMod.setColumns(20);
        txtAreaDescricaoMod.setRows(5);
        jScrollPane2.setViewportView(txtAreaDescricaoMod);

        btnOkMod.setBackground(new java.awt.Color(0, 102, 0));
        btnOkMod.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnOkMod.setForeground(new java.awt.Color(255, 255, 255));
        btnOkMod.setText("OK");
        btnOkMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkModActionPerformed(evt);
            }
        });

        btnCancelarMod.setBackground(new java.awt.Color(102, 0, 0));
        btnCancelarMod.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancelarMod.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelarMod.setText("Cancelar");
        btnCancelarMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarModActionPerformed(evt);
            }
        });

        labelCodMod.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelCodMod.setText("Cod:");

        txtCodMod.setEnabled(false);

        javax.swing.GroupLayout PainelMod2Layout = new javax.swing.GroupLayout(PainelMod2);
        PainelMod2.setLayout(PainelMod2Layout);
        PainelMod2Layout.setHorizontalGroup(
            PainelMod2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelMod2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelMod2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelModifique, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTituloMod)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelMod2Layout.createSequentialGroup()
                        .addGroup(PainelMod2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDataMod, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTituloMod)
                            .addComponent(labelPrazoMod))
                        .addGroup(PainelMod2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PainelMod2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelCodMod, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26))
                            .addGroup(PainelMod2Layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addGroup(PainelMod2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelStatusMod)
                                    .addComponent(comboBoxStatusMod, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCodMod, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PainelMod2Layout.createSequentialGroup()
                        .addGroup(PainelMod2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelDescricaoMod, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOkMod, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancelarMod, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        PainelMod2Layout.setVerticalGroup(
            PainelMod2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelMod2Layout.createSequentialGroup()
                .addComponent(labelModifique, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addGap(20, 20, 20)
                .addGroup(PainelMod2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTituloMod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PainelMod2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelCodMod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCodMod)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTituloMod)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelMod2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPrazoMod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelStatusMod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelMod2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelMod2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(txtDataMod))
                    .addComponent(comboBoxStatusMod))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelDescricaoMod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(PainelMod2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarMod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOkMod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        labelNovaTarefa.setBackground(new java.awt.Color(0, 102, 255));
        labelNovaTarefa.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        labelNovaTarefa.setForeground(new java.awt.Color(255, 255, 255));
        labelNovaTarefa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelNovaTarefa.setText("PAINEL MOD ");
        labelNovaTarefa.setOpaque(true);

        javax.swing.GroupLayout PainelModLayout = new javax.swing.GroupLayout(PainelMod);
        PainelMod.setLayout(PainelModLayout);
        PainelModLayout.setHorizontalGroup(
            PainelModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelNovaTarefa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PainelModLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PainelMod2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        PainelModLayout.setVerticalGroup(
            PainelModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelModLayout.createSequentialGroup()
                .addComponent(labelNovaTarefa, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PainelMod2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnAtualizar.setBackground(new java.awt.Color(255, 255, 255));
        btnAtualizar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAtualizar.setForeground(new java.awt.Color(0, 0, 0));
        btnAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/atualizar.png"))); // NOI18N
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        PainelFiltros.setForeground(new java.awt.Color(60, 63, 65));

        checkBoxPendente.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        checkBoxPendente.setForeground(new java.awt.Color(255, 255, 255));
        checkBoxPendente.setText("Pendente");
        checkBoxPendente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxPendenteActionPerformed(evt);
            }
        });

        checkBoxExecutando.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        checkBoxExecutando.setForeground(new java.awt.Color(255, 255, 255));
        checkBoxExecutando.setText("Executando");
        checkBoxExecutando.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxExecutandoActionPerformed(evt);
            }
        });

        checkBoxConcluida.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        checkBoxConcluida.setForeground(new java.awt.Color(255, 255, 255));
        checkBoxConcluida.setText("Concluída");
        checkBoxConcluida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxConcluidaActionPerformed(evt);
            }
        });

        checkBoxTodos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        checkBoxTodos.setForeground(new java.awt.Color(255, 255, 255));
        checkBoxTodos.setText("Todos");
        checkBoxTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxTodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PainelFiltrosLayout = new javax.swing.GroupLayout(PainelFiltros);
        PainelFiltros.setLayout(PainelFiltrosLayout);
        PainelFiltrosLayout.setHorizontalGroup(
            PainelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelFiltrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkBoxPendente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(checkBoxExecutando, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(checkBoxConcluida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(checkBoxTodos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PainelFiltrosLayout.setVerticalGroup(
            PainelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(checkBoxConcluida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(checkBoxTodos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(checkBoxExecutando, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(checkBoxPendente, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAtualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PainelFiltros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addComponent(PainelMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(btnNovaTarefaPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(100, 100, 100)
                .addComponent(btnEditarTarefa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(102, 102, 102)
                .addComponent(btnDeletarTarefa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(111, 111, 111)
                .addComponent(btnFiltrarTarefa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovaTarefaPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditarTarefa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDeletarTarefa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFiltrarTarefa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PainelFiltros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PainelMod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovaTarefaPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovaTarefaPrincipalActionPerformed
        // Botão Nova Tarefa tela principal
        new TelaRegistraTarefa().setVisible(true);
    }//GEN-LAST:event_btnNovaTarefaPrincipalActionPerformed

    private void btnEditarTarefaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarTarefaActionPerformed
        // Botão editar tarefa 
        verificaSelecao();
    }//GEN-LAST:event_btnEditarTarefaActionPerformed

    private void btnDeletarTarefaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarTarefaActionPerformed
        // Botão deletar tarefa
        verificaSelecao(); 
        if(check == 1){
          confirmarExclusao();  
        }        
    }//GEN-LAST:event_btnDeletarTarefaActionPerformed

    private void btnFiltrarTarefaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarTarefaActionPerformed
        // Botão filtrar tarefa
        if(clickDuplo == 0){
           PainelFiltros.setVisible(true);
           clickDuplo = 1;
        }else if(clickDuplo == 1){
            PainelFiltros.setVisible(false);
            clickDuplo = 0;
        }     
    }//GEN-LAST:event_btnFiltrarTarefaActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        //Botão para atualizar a lista
        listarTarefas();
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void txtTituloModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTituloModActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTituloModActionPerformed

    private void btnOkModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkModActionPerformed
        // Botão Ok do painel MOD:
        editarTarefa();
        limparCamposMod();
        listarTarefas();
    }//GEN-LAST:event_btnOkModActionPerformed

    private void btnCancelarModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarModActionPerformed
        // Botão cancelar do painel MOD
        limparCamposMod();
    }//GEN-LAST:event_btnCancelarModActionPerformed

    private void checkBoxConcluidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxConcluidaActionPerformed
        // TODO add your handling code here:
        checkBoxClicada(evt);
        if(checkBoxConcluida.isSelected()){
           listarConcluido();
        }
    }//GEN-LAST:event_checkBoxConcluidaActionPerformed

    private void checkBoxPendenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxPendenteActionPerformed
        // TODO add your handling code here:
        checkBoxClicada(evt);
        if(checkBoxPendente.isSelected()){
           listarPendentes();
        }
    }//GEN-LAST:event_checkBoxPendenteActionPerformed

    private void checkBoxExecutandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxExecutandoActionPerformed
        // TODO add your handling code here:
        checkBoxClicada(evt);
        if(checkBoxExecutando.isSelected()){
           listarExecutando();
        }
    }//GEN-LAST:event_checkBoxExecutandoActionPerformed

    private void checkBoxTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxTodosActionPerformed
        // Botão todos filtragem dos dados
        checkBoxClicada(evt);
        if(checkBoxTodos.isSelected()){
           listarTarefas();
        }             
    }//GEN-LAST:event_checkBoxTodosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PainelFiltros;
    private javax.swing.JPanel PainelMod;
    private javax.swing.JPanel PainelMod2;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnCancelarMod;
    private javax.swing.JButton btnDeletarTarefa;
    private javax.swing.JButton btnEditarTarefa;
    private javax.swing.JButton btnFiltrarTarefa;
    private javax.swing.JButton btnNovaTarefaPrincipal;
    private javax.swing.JButton btnOkMod;
    private javax.swing.JCheckBox checkBoxConcluida;
    private javax.swing.JCheckBox checkBoxExecutando;
    private javax.swing.JCheckBox checkBoxPendente;
    private javax.swing.JCheckBox checkBoxTodos;
    private javax.swing.JComboBox<String> comboBoxStatusMod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelCodMod;
    private javax.swing.JLabel labelDescricaoMod;
    private javax.swing.JLabel labelModifique;
    private javax.swing.JLabel labelNovaTarefa;
    private javax.swing.JLabel labelPrazoMod;
    private javax.swing.JLabel labelStatusMod;
    private javax.swing.JLabel labelTituloMod;
    private javax.swing.JTable tabelaTarefas;
    private javax.swing.JTextArea txtAreaDescricaoMod;
    private javax.swing.JTextField txtCodMod;
    private javax.swing.JFormattedTextField txtDataMod;
    private javax.swing.JTextField txtTituloMod;
    // End of variables declaration//GEN-END:variables

    //Método para ocultar a coluna id sem exclui-la da tabela de tarefas 
    private void limparColunaId(){              
            TableColumnModel columnModel = tabelaTarefas.getColumnModel();
            TableColumn colunaId = columnModel.getColumn(0);
            columnModel.removeColumn(colunaId);      
    }
    
    //Método para listar as tarefas e armazenar na table (READ)
    private void listarTarefas(){      
        try {        
            TarefaDAO lista_tarefa_tabela = new TarefaDAO();
            DefaultTableModel model = (DefaultTableModel) tabelaTarefas.getModel();           
            model.setNumRows(0);
            
            ArrayList<Tarefa> lista_tarefa = lista_tarefa_tabela.listarTarefas();
            
            for(int num = 0; num < lista_tarefa.size(); num++){
                model.addRow(new Object[]{
                    lista_tarefa.get(num).getId_tarefa(),
                    lista_tarefa.get(num).getTitulo(),
                    lista_tarefa.get(num).getDescricao(),
                    lista_tarefa.get(num).getStatus(),
                    lista_tarefa.get(num).getPrazo()
            });               
            }          
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Não foi possível listar os valores (Tela Principal metodo listarTarefas) "+erro);
        }       
    }
    
    //Método para recolher os dados que devem ser editados e lança-los nos campos do painel mod
    private void colherDadosLinha(){
        int setar = tabelaTarefas.getSelectedRow();
        
        txtCodMod.setText(tabelaTarefas.getModel().getValueAt(setar, 0).toString());
        txtTituloMod.setText(tabelaTarefas.getModel().getValueAt(setar, 1).toString()); 
        txtAreaDescricaoMod.setText(tabelaTarefas.getModel().getValueAt(setar, 2).toString());
        comboBoxStatusMod.setSelectedItem(tabelaTarefas.getModel().getValueAt(setar, 3).toString());
        txtDataMod.setText(tabelaTarefas.getModel().getValueAt(setar, 4).toString());
}
    
    //Método para limpar os campos do painel mod
    private void limparCamposMod(){
        txtCodMod.setText("");
        txtTituloMod.setText("");
        txtAreaDescricaoMod.setText("");
        txtDataMod.setText("");
        comboBoxStatusMod.setSelectedItem(0);
    }
    
    //Método para verificar se o usuário selecionou ou não uma linha na tabela
    private void verificaSelecao(){
        if(tabelaTarefas.getSelectedRow() < 0){
            JOptionPane.showMessageDialog(null, "Você precisa selecionar uma linha na tabela para realizar esta ação!");
            check = 0;
        }else{
            colherDadosLinha();
            check = 1;
        }
    }
    
    //Método para modificar os dados da tarefa (UPDATE)
    private void editarTarefa(){        
        
        int idEdit;
        String tituloEdit, descricaoEdit, prazoEdit, statusEdit;
        
        idEdit = Integer.parseInt(txtCodMod.getText());
        tituloEdit = txtTituloMod.getText();
        descricaoEdit = txtAreaDescricaoMod.getText();
        prazoEdit = txtDataMod.getText();
        statusEdit = (String) comboBoxStatusMod.getSelectedItem();

        Tarefa edita_tarefa = new Tarefa();
        edita_tarefa.setId_tarefa(idEdit);
        edita_tarefa.setTitulo(tituloEdit);
        edita_tarefa.setDescricao(descricaoEdit);
        edita_tarefa.setPrazo(prazoEdit);
        edita_tarefa.setStatus(statusEdit);
        
        
        TarefaDAO editaDao = new TarefaDAO();
        editaDao.editarTarefa(edita_tarefa);
    }
    
    //Método para deletar uma tarefa selecionada (DELETE)
    private void deletarTarefa(){
        
        int idDelete;
        
        idDelete = Integer.parseInt(txtCodMod.getText());
        
        Tarefa deleta_tarefa = new Tarefa();
        deleta_tarefa.setId_tarefa(idDelete);
        
        TarefaDAO deleteDao = new TarefaDAO();
        deleteDao.deletarTarefa(deleta_tarefa);      
    }
    
    //Método para criar uma caixa de confirmação de próxima ação e executar métodos de deletar caso resultado seja sim
    private void confirmarExclusao(){
        
        UIManager.put("OptionPane.yesButtonText", "Sim");
        UIManager.put("OptionPane.noButtonText", "Não");
        
        int resultado = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir essa tarefa?", "Confirmação" ,JOptionPane.YES_NO_OPTION);
        
        if(resultado == JOptionPane.YES_OPTION){
            deletarTarefa();
            limparCamposMod();
            listarTarefas();
        }     
    }
    
    //Método para fazer o controle da filtragem da lista de tarefas
    private void checkBoxClicada(ActionEvent evt) {
        JCheckBox checkBox = (JCheckBox) evt.getSource();

    if (checkBox == checkBoxTodos && checkBox.isSelected()) {
        checkBoxConcluida.setSelected(false);
        checkBoxPendente.setSelected(false);
        checkBoxExecutando.setSelected(false);
    } else if (checkBox == checkBoxConcluida && checkBox.isSelected()) {
        checkBoxTodos.setSelected(false);
        checkBoxPendente.setSelected(false);
        checkBoxExecutando.setSelected(false);
    } else if (checkBox == checkBoxPendente && checkBox.isSelected()) {
        checkBoxTodos.setSelected(false);
        checkBoxConcluida.setSelected(false);
        checkBoxExecutando.setSelected(false);
    } else if (checkBox == checkBoxExecutando && checkBox.isSelected()) {
        checkBoxTodos.setSelected(false);
        checkBoxConcluida.setSelected(false);
        checkBoxPendente.setSelected(false);
    }
    }
    
    //Método para listar apenas as tarefas pendentes
    private void listarPendentes(){      
        try {        
            TarefaDAO lista_tarefa_tabela = new TarefaDAO();
            DefaultTableModel model = (DefaultTableModel) tabelaTarefas.getModel();           
            model.setNumRows(0);
            tabelaTarefas.setRowSorter(new TableRowSorter(model));
            
            ArrayList<Tarefa> lista_tarefa = lista_tarefa_tabela.listarPendentes();
            
            for(int num = 0; num < lista_tarefa.size(); num++){
                model.addRow(new Object[]{
                    lista_tarefa.get(num).getId_tarefa(),
                    lista_tarefa.get(num).getTitulo(),
                    lista_tarefa.get(num).getDescricao(),
                    lista_tarefa.get(num).getStatus(),
                    lista_tarefa.get(num).getPrazo()
            });               
            }          
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Não foi possível listar os valores (Tela Principal metodo listarPendentes) "+erro);
        }       
    }
    
    //Método para listar apenas as tarefas em execução
    private void listarExecutando(){      
        try {        
            TarefaDAO lista_tarefa_tabela = new TarefaDAO();
            DefaultTableModel model = (DefaultTableModel) tabelaTarefas.getModel();           
            model.setNumRows(0);
            tabelaTarefas.setRowSorter(new TableRowSorter(model));
            
            ArrayList<Tarefa> lista_tarefa = lista_tarefa_tabela.listarExecutando();
            
            for(int num = 0; num < lista_tarefa.size(); num++){
                model.addRow(new Object[]{
                    lista_tarefa.get(num).getId_tarefa(),
                    lista_tarefa.get(num).getTitulo(),
                    lista_tarefa.get(num).getDescricao(),
                    lista_tarefa.get(num).getStatus(),
                    lista_tarefa.get(num).getPrazo()
            });               
            }          
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Não foi possível listar os valores (Tela Principal metodo listarExecutando) "+erro);
        }       
    }
    
    //Método para listar apenas as tarefas concluidas
    private void listarConcluido(){      
        try {        
            TarefaDAO lista_tarefa_tabela = new TarefaDAO();
            DefaultTableModel model = (DefaultTableModel) tabelaTarefas.getModel();           
            model.setNumRows(0);
            tabelaTarefas.setRowSorter(new TableRowSorter(model));
            
            ArrayList<Tarefa> lista_tarefa = lista_tarefa_tabela.listarConcluido();
            
            for(int num = 0; num < lista_tarefa.size(); num++){
                model.addRow(new Object[]{
                    lista_tarefa.get(num).getId_tarefa(),
                    lista_tarefa.get(num).getTitulo(),
                    lista_tarefa.get(num).getDescricao(),
                    lista_tarefa.get(num).getStatus(),
                    lista_tarefa.get(num).getPrazo()
            });               
            }          
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Não foi possível listar os valores (Tela Principal metodo listarConcluido) "+erro);
        }       
    }
}

           



